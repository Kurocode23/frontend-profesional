{"version":3,"sources":["pictures-test.js"],"names":["t","image","getImage","srv","url","body","uri","publicId","json","deepEqual","todo"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;AAEA,mBAAK,UAAL;AAAA,+BAAiB,WAAMA,CAAN,EAAW;AAC1B,QAAIC,QAAQ,mBAASC,QAAT,EAAZ;AACA,QAAIC,MAAM,wCAAV;;AAEA,QAAIC,MAAM,MAAM,0BAAOD,GAAP,CAAhB;AACA,QAAIE,OAAO,MAAM,8BAAQ,EAAEC,KAAM,GAAEF,GAAI,IAAGH,MAAMM,QAAS,EAAhC,EAAmCC,MAAM,IAAzC,EAAR,CAAjB;AACAR,MAAES,SAAF,CAAYJ,IAAZ,EAAkBJ,KAAlB;AACD,GAPD;;AAAA;AAAA;AAAA;AAAA;;AASA,cAAKS,IAAL,CAAU,QAAV;AACA,cAAKA,IAAL,CAAU,gBAAV","file":"pictures-test.js","sourcesContent":["import test from 'ava'\nimport micro from 'micro'\nimport listen from 'test-listen'\nimport request from 'request-promise'\n\nimport pictures from '../pictures'\nimport fixtures from './fixtures'\n\ntest('GET /:id', async t => {\n  let image = fixtures.getImage()\n  let srv = micro(pictures)\n\n  let url = await listen(srv)\n  let body = await request({ uri: `${url}/${image.publicId}`, json: true })\n  t.deepEqual(body, image)\n})\n\ntest.todo('POST /')\ntest.todo('POST /:id/like')\n"]}